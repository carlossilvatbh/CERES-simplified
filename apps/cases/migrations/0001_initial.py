# Generated by Django 5.1.4 on 2025-07-07 10:02

import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('customers', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CaseType',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200, verbose_name='Nome')),
                ('description', models.TextField(verbose_name='Descrição')),
                ('default_priority', models.CharField(choices=[('LOW', 'Baixa'), ('MEDIUM', 'Média'), ('HIGH', 'Alta'), ('CRITICAL', 'Crítica')], default='MEDIUM', max_length=10, verbose_name='Prioridade Padrão')),
                ('auto_assign', models.BooleanField(default=False, verbose_name='Atribuição Automática')),
                ('sla_hours', models.IntegerField(blank=True, help_text='Tempo limite para resolução em horas', null=True, verbose_name='SLA (horas)')),
                ('is_active', models.BooleanField(default=True, verbose_name='Ativo')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Criado em')),
            ],
            options={
                'verbose_name': 'Tipo de Caso',
                'verbose_name_plural': 'Tipos de Casos',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Case',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('case_number', models.CharField(max_length=50, unique=True, verbose_name='Número do Caso')),
                ('title', models.CharField(max_length=500, verbose_name='Título')),
                ('description', models.TextField(verbose_name='Descrição')),
                ('status', models.CharField(choices=[('OPEN', 'Aberto'), ('IN_PROGRESS', 'Em Andamento'), ('PENDING_INFO', 'Aguardando Informações'), ('UNDER_REVIEW', 'Em Análise'), ('RESOLVED', 'Resolvido'), ('CLOSED', 'Fechado'), ('CANCELLED', 'Cancelado')], default='OPEN', max_length=20, verbose_name='Status')),
                ('priority', models.CharField(choices=[('LOW', 'Baixa'), ('MEDIUM', 'Média'), ('HIGH', 'Alta'), ('CRITICAL', 'Crítica')], default='MEDIUM', max_length=10, verbose_name='Prioridade')),
                ('assigned_at', models.DateTimeField(blank=True, null=True, verbose_name='Atribuído em')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Criado em')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Atualizado em')),
                ('due_date', models.DateTimeField(blank=True, null=True, verbose_name='Data Limite')),
                ('resolved_at', models.DateTimeField(blank=True, null=True, verbose_name='Resolvido em')),
                ('closed_at', models.DateTimeField(blank=True, null=True, verbose_name='Fechado em')),
                ('resolution', models.CharField(blank=True, choices=[('APPROVED', 'Aprovado'), ('REJECTED', 'Rejeitado'), ('ESCALATED', 'Escalado'), ('NO_ACTION', 'Nenhuma Ação Necessária'), ('REFERRED', 'Encaminhado')], max_length=20, verbose_name='Resolução')),
                ('resolution_notes', models.TextField(blank=True, verbose_name='Notas da Resolução')),
                ('is_escalated', models.BooleanField(default=False, verbose_name='Escalado')),
                ('requires_approval', models.BooleanField(default=False, verbose_name='Requer Aprovação')),
                ('tags', models.CharField(blank=True, help_text='Tags separadas por vírgula', max_length=500, verbose_name='Tags')),
                ('assigned_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_cases', to=settings.AUTH_USER_MODEL, verbose_name='Atribuído para')),
                ('beneficial_owner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='cases', to='customers.beneficialowner', verbose_name='Beneficiário Final')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_cases', to=settings.AUTH_USER_MODEL, verbose_name='Criado por')),
                ('customer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='cases', to='customers.customer', verbose_name='Cliente')),
                ('resolved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='resolved_cases', to=settings.AUTH_USER_MODEL, verbose_name='Resolvido por')),
                ('case_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='cases.casetype', verbose_name='Tipo de Caso')),
            ],
            options={
                'verbose_name': 'Caso',
                'verbose_name_plural': 'Casos',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='CaseAssignment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('assigned_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Atribuído em')),
                ('unassigned_at', models.DateTimeField(blank=True, null=True, verbose_name='Desatribuído em')),
                ('assignment_reason', models.TextField(blank=True, verbose_name='Motivo da Atribuição')),
                ('is_current', models.BooleanField(default=True, verbose_name='Atribuição Atual')),
                ('assigned_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='made_assignments', to=settings.AUTH_USER_MODEL, verbose_name='Atribuído por')),
                ('assigned_to', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='case_assignments', to=settings.AUTH_USER_MODEL, verbose_name='Atribuído para')),
                ('case', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assignment_history', to='cases.case', verbose_name='Caso')),
            ],
            options={
                'verbose_name': 'Atribuição de Caso',
                'verbose_name_plural': 'Atribuições de Casos',
                'ordering': ['-assigned_at'],
            },
        ),
        migrations.CreateModel(
            name='CaseNote',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('note_type', models.CharField(choices=[('GENERAL', 'Geral'), ('UPDATE', 'Atualização'), ('INVESTIGATION', 'Investigação'), ('DECISION', 'Decisão'), ('COMMUNICATION', 'Comunicação'), ('ESCALATION', 'Escalação')], default='GENERAL', max_length=20, verbose_name='Tipo de Nota')),
                ('title', models.CharField(max_length=200, verbose_name='Título')),
                ('content', models.TextField(verbose_name='Conteúdo')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Criada em')),
                ('is_internal', models.BooleanField(default=True, verbose_name='Nota Interna')),
                ('is_important', models.BooleanField(default=False, verbose_name='Importante')),
                ('case', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notes', to='cases.case', verbose_name='Caso')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Criada por')),
            ],
            options={
                'verbose_name': 'Nota do Caso',
                'verbose_name_plural': 'Notas dos Casos',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='CaseStatusHistory',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('from_status', models.CharField(blank=True, choices=[('OPEN', 'Aberto'), ('IN_PROGRESS', 'Em Andamento'), ('PENDING_INFO', 'Aguardando Informações'), ('UNDER_REVIEW', 'Em Análise'), ('RESOLVED', 'Resolvido'), ('CLOSED', 'Fechado'), ('CANCELLED', 'Cancelado')], max_length=20, verbose_name='Status Anterior')),
                ('to_status', models.CharField(choices=[('OPEN', 'Aberto'), ('IN_PROGRESS', 'Em Andamento'), ('PENDING_INFO', 'Aguardando Informações'), ('UNDER_REVIEW', 'Em Análise'), ('RESOLVED', 'Resolvido'), ('CLOSED', 'Fechado'), ('CANCELLED', 'Cancelado')], max_length=20, verbose_name='Novo Status')),
                ('changed_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Alterado em')),
                ('change_reason', models.TextField(blank=True, verbose_name='Motivo da Alteração')),
                ('case', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='status_history', to='cases.case', verbose_name='Caso')),
                ('changed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Alterado por')),
            ],
            options={
                'verbose_name': 'Histórico de Status',
                'verbose_name_plural': 'Históricos de Status',
                'ordering': ['-changed_at'],
            },
        ),
        migrations.AddIndex(
            model_name='case',
            index=models.Index(fields=['case_number'], name='cases_case_case_nu_a07304_idx'),
        ),
        migrations.AddIndex(
            model_name='case',
            index=models.Index(fields=['status', 'priority'], name='cases_case_status_7ed306_idx'),
        ),
        migrations.AddIndex(
            model_name='case',
            index=models.Index(fields=['assigned_to', 'status'], name='cases_case_assigne_e88b3b_idx'),
        ),
        migrations.AddIndex(
            model_name='case',
            index=models.Index(fields=['customer'], name='cases_case_custome_46bd45_idx'),
        ),
        migrations.AddIndex(
            model_name='case',
            index=models.Index(fields=['created_at'], name='cases_case_created_a9dee7_idx'),
        ),
        migrations.AddIndex(
            model_name='case',
            index=models.Index(fields=['due_date'], name='cases_case_due_dat_c8e5f4_idx'),
        ),
    ]
