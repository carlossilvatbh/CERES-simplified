# Generated by Django 5.1.4 on 2025-07-07 10:02

import django.core.validators
import django.db.models.deletion
import uuid
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('customer_type', models.CharField(choices=[('INDIVIDUAL', 'Pessoa Física'), ('CORPORATE', 'Pessoa Jurídica'), ('PARTNERSHIP', 'Sociedade'), ('TRUST', 'Trust'), ('FOUNDATION', 'Fundação'), ('OTHER', 'Outro')], default='INDIVIDUAL', max_length=20, verbose_name='Tipo de Cliente')),
                ('full_name', models.CharField(max_length=255, verbose_name='Nome Completo')),
                ('legal_name', models.CharField(blank=True, help_text='Para pessoas jurídicas', max_length=255, null=True, verbose_name='Razão Social')),
                ('document_number', models.CharField(help_text='CPF, CNPJ, Passaporte, etc.', max_length=50, unique=True, verbose_name='Número do Documento')),
                ('document_type', models.CharField(default='CPF', max_length=20, verbose_name='Tipo de Documento')),
                ('email', models.EmailField(max_length=254, verbose_name='E-mail')),
                ('phone', models.CharField(max_length=20, verbose_name='Telefone')),
                ('address', models.TextField(verbose_name='Endereço')),
                ('city', models.CharField(max_length=100, verbose_name='Cidade')),
                ('state', models.CharField(max_length=100, verbose_name='Estado')),
                ('country', models.CharField(default='Brasil', max_length=100, verbose_name='País')),
                ('postal_code', models.CharField(max_length=20, verbose_name='CEP')),
                ('business_type', models.CharField(blank=True, max_length=100, null=True, verbose_name='Tipo de Negócio')),
                ('industry', models.CharField(blank=True, max_length=100, null=True, verbose_name='Setor')),
                ('annual_revenue', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True, verbose_name='Receita Anual')),
                ('onboarding_status', models.CharField(choices=[('PENDING', 'Pendente'), ('IN_PROGRESS', 'Em Andamento'), ('ADDITIONAL_INFO', 'Informações Adicionais Necessárias'), ('UNDER_REVIEW', 'Em Análise'), ('APPROVED', 'Aprovado'), ('REJECTED', 'Rejeitado'), ('SUSPENDED', 'Suspenso'), ('CLOSED', 'Encerrado')], default='PENDING', max_length=20, verbose_name='Status do Onboarding')),
                ('risk_level', models.CharField(choices=[('LOW', 'Baixo Risco'), ('MEDIUM', 'Médio Risco'), ('HIGH', 'Alto Risco'), ('CRITICAL', 'Risco Crítico')], default='MEDIUM', max_length=10, verbose_name='Nível de Risco')),
                ('risk_score', models.IntegerField(default=50, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Score de Risco')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Criado em')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Atualizado em')),
                ('last_review_date', models.DateTimeField(blank=True, null=True, verbose_name='Última Revisão')),
                ('next_review_date', models.DateTimeField(blank=True, null=True, verbose_name='Próxima Revisão')),
                ('is_pep', models.BooleanField(default=False, help_text='Pessoa Politicamente Exposta (PEP)', verbose_name='Pessoa Politicamente Exposta')),
                ('is_sanctions_checked', models.BooleanField(default=False, verbose_name='Verificado contra Sanções')),
                ('sanctions_last_check', models.DateTimeField(blank=True, null=True, verbose_name='Última Verificação de Sanções')),
                ('notes', models.TextField(blank=True, verbose_name='Observações')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_customers', to=settings.AUTH_USER_MODEL, verbose_name='Criado por')),
            ],
            options={
                'verbose_name': 'Cliente',
                'verbose_name_plural': 'Clientes',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='BeneficialOwner',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('full_name', models.CharField(max_length=255, verbose_name='Nome Completo')),
                ('document_number', models.CharField(max_length=50, verbose_name='Número do Documento')),
                ('document_type', models.CharField(default='CPF', max_length=20, verbose_name='Tipo de Documento')),
                ('ownership_percentage', models.DecimalField(decimal_places=2, max_digits=5, validators=[django.core.validators.MinValueValidator(Decimal('0.01')), django.core.validators.MaxValueValidator(Decimal('100.00'))], verbose_name='Percentual de Participação')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='E-mail')),
                ('phone', models.CharField(blank=True, max_length=20, verbose_name='Telefone')),
                ('address', models.TextField(blank=True, verbose_name='Endereço')),
                ('country', models.CharField(default='Brasil', max_length=100, verbose_name='País')),
                ('is_pep', models.BooleanField(default=False, verbose_name='Pessoa Politicamente Exposta')),
                ('is_sanctions_checked', models.BooleanField(default=False, verbose_name='Verificado contra Sanções')),
                ('sanctions_last_check', models.DateTimeField(blank=True, null=True, verbose_name='Última Verificação de Sanções')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Criado em')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Atualizado em')),
                ('notes', models.TextField(blank=True, verbose_name='Observações')),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='beneficial_owners', to='customers.customer', verbose_name='Cliente')),
            ],
            options={
                'verbose_name': 'Beneficiário Final',
                'verbose_name_plural': 'Beneficiários Finais',
                'ordering': ['-ownership_percentage', 'full_name'],
            },
        ),
        migrations.CreateModel(
            name='CustomerNote',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=200, verbose_name='Título')),
                ('content', models.TextField(verbose_name='Conteúdo')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Criado em')),
                ('is_important', models.BooleanField(default=False, verbose_name='Importante')),
                ('is_internal', models.BooleanField(default=True, verbose_name='Nota Interna')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Criado por')),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='customer_notes', to='customers.customer', verbose_name='Cliente')),
            ],
            options={
                'verbose_name': 'Nota do Cliente',
                'verbose_name_plural': 'Notas dos Clientes',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddIndex(
            model_name='customer',
            index=models.Index(fields=['document_number'], name='customers_c_documen_d2a71a_idx'),
        ),
        migrations.AddIndex(
            model_name='customer',
            index=models.Index(fields=['onboarding_status'], name='customers_c_onboard_3eea9c_idx'),
        ),
        migrations.AddIndex(
            model_name='customer',
            index=models.Index(fields=['risk_level'], name='customers_c_risk_le_e88a46_idx'),
        ),
        migrations.AddIndex(
            model_name='customer',
            index=models.Index(fields=['created_at'], name='customers_c_created_1ed0f4_idx'),
        ),
        migrations.AddIndex(
            model_name='beneficialowner',
            index=models.Index(fields=['customer', 'ownership_percentage'], name='customers_b_custome_9d9607_idx'),
        ),
        migrations.AddIndex(
            model_name='beneficialowner',
            index=models.Index(fields=['document_number'], name='customers_b_documen_44535e_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='beneficialowner',
            unique_together={('customer', 'document_number')},
        ),
    ]
